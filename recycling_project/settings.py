"""
Django settings for recycling_project project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

import os
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/inventaires/'

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^c^$$ku8nf*@1^f9b@n(+&ir$&&wsmov+0x6+-0_!p=#f1wk9o'#

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'recycling.apps.RecyclingConfig',
     'django_extensions',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'recycling_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'recycling_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases




BASE_DIR = Path(__file__).resolve().parent.parent

#DATABASES = {
 #   'default': {
  #      'ENGINE': 'django.db.backends.sqlite3',
   #    'NAME': BASE_DIR / 'db.sqlite3',
    #}
#}


# settings.py (Django configuration)

import os
from decouple import config

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('POSTGRES_DB', 'recyclage11'),
        'USER': os.getenv('POSTGRES_USER', 'ameur1111'),
        'PASSWORD': os.getenv('POSTGRES_PASSWORD', 'loulou11'),
        'HOST': os.getenv('POSTGRES_HOST', 'db'),  # 'db' est le nom du service dans docker-compose
        'PORT': os.getenv('POSTGRES_PORT', '5432'),
    }
}




from pymongo import MongoClient

# Connexion MongoDB
MONGO_CLIENT = MongoClient('mongodb://localhost:27017/')
MONGO_DB = MONGO_CLIENT['co2calculator']


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'fr'  # Définit la langue en français
TIME_ZONE = 'Europe/Paris'  # Définit le fuseau horaire pour la France
USE_I18N = True  # Active la traduction internationale
USE_TZ = True  # Active la gestion des fuseaux horaires

# Formats adaptés pour le français
DATE_FORMAT = 'd/m/Y'  # Format : jour/mois/année
DATETIME_FORMAT = 'd/m/Y H:i:s'  # Format : jour/mois/année heure:minute:seconde
TIME_FORMAT = 'H:i:s'  # Heure au format 24h


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]








#PASSWORD_HASHERS = [
    #'django.contrib.auth.hashers.BCryptPasswordHasher',
    #'django.contrib.auth.hashers.PBKDF2PasswordHasher',
#]

# Configuration SSL pour sécuriser l'application en production

# Forcer toutes les requêtes HTTP à être redirigées vers HTTPS
# SECURE_SSL_REDIRECT = True

# Utiliser le filtre XSS intégré des navigateurs pour empêcher certaines attaques
# SECURE_BROWSER_XSS_FILTER = True

# Empêcher le MIME-sniffing pour empêcher certains types d'attaques
# SECURE_CONTENT_TYPE_NOSNIFF = True

# Forcer l'utilisation de cookies uniquement sur des connexions HTTPS
# SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE = True

# Utiliser HSTS (Strict Transport Security) pour forcer les navigateurs à toujours utiliser HTTPS
# SECURE_HSTS_SECONDS = 31536000  # 1 an
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # Appliquer également aux sous-domaines
# SECURE_HSTS_PRELOAD = True  # Autoriser le site à être préchargé dans les listes HSTS

# Empêcher le chargement du site dans une iframe pour éviter les attaques de type Clickjacking
# X_FRAME_OPTIONS = 'DENY'

# Utiliser les cookies "SameSite" pour protéger contre les attaques CSRF
# CSRF_COOKIE_SAMESITE = 'Lax'
# SESSION_COOKIE_SAMESITE = 'Lax'


# Configuration des logs

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'security.log'),
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
        'security': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}
LOGIN_URL = '/login1/'  # URL pour la redirection si l'utilisateur n'est pas connecté
LOGIN_REDIRECT_URL = '/secure/'  # URL après connexion réussie
